/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyMina.vista.interfaces;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import proyMina.modelo.clsConnection;
import proyMina.modelo.clsFunciones;
import proyMina.modelo.clsGlobales;
import proyMina.modelo.clsOperacionesUsuarios;

/**
 *
 * @author Sistemas
 */
public class AsignacionVistas extends javax.swing.JFrame {

    Date dateHoy = new Date();
    SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    DefaultTableModel model; 
    int id_asignacion = 0;
    
    public AsignacionVistas() {
        initComponents();
        AutoCompleteDecorator.decorate(this.cboAsignarRol);
        AutoCompleteDecorator.decorate(this.cboVistas);
        listarRol();
        llenar_tabla_hc();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboAsignarRol = new javax.swing.JComboBox<>();
        btnAsignarVista = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaAsignacionRol = new javax.swing.JTable();
        cboVistas = new javax.swing.JComboBox<>();
        btnActualizarVista = new javax.swing.JToggleButton();
        btnLimpiarVista = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asignar Roles");
        setResizable(false);

        jLabel1.setText("Rol :");

        jLabel2.setText("Nombre Vista :");

        cboAsignarRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A" }));
        cboAsignarRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAsignarRolActionPerformed(evt);
            }
        });

        btnAsignarVista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chek.gif"))); // NOI18N
        btnAsignarVista.setText("Asignar");
        btnAsignarVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarVistaActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 204, 255));
        jPanel2.setForeground(new java.awt.Color(51, 204, 255));

        TablaAsignacionRol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaAsignacionRol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TablaAsignacionRolMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaAsignacionRol);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboVistas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A" }));

        btnActualizarVista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        btnActualizarVista.setText("Actualizar");
        btnActualizarVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarVistaActionPerformed(evt);
            }
        });

        btnLimpiarVista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiarVista.setText("Limpiar");
        btnLimpiarVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarVistaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboAsignarRol, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboVistas, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAsignarVista, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnLimpiarVista, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActualizarVista, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btnActualizarVista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarVista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAsignarVista))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cboAsignarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboVistas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarVistaActionPerformed
        if (!Asig_dni_empleado.getText().isEmpty()){
            if(!oPe.validar(Asig_dni_empleado,"desktop_asignacion_empleado_rol","dni_empleado")){
            
            int key= oFunc.contadorPrimario("desktop_asignacion_empleado_rol");
            String strSqlStmt;
            String Query ;
            strSqlStmt="INSERT INTO desktop_asignacion_empleado_rol (";
            Query="Values(";
            strSqlStmt += "id_asignacion";Query +=key+"";
            strSqlStmt += ",dni_empleado";Query += ","+ Asig_dni_empleado.getText().trim();           
            strSqlStmt += ",nombre_rol";Query += ",'" +cboAsignarRol.getSelectedItem().toString().trim() + "'";
            strSqlStmt += ",user_registro";Query += ",'"+clsGlobales.sUser+ "'";
            strSqlStmt += ",fecha_registro";Query += ",'"+formato.format(dateHoy)+ "'";
            
            System.out.println("el comando es: " + strSqlStmt.concat(") ") + Query.concat(")")); 
            if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + Query.concat(")"))){
                oFunc.SubSistemaMensajeInformacion("Se ha registrado con Éxito");
                btnLimpiarRoles();
                llenar_tabla_hc();
            } else{
                    oFunc.SubSistemaMensajeError("No se pudo Registrar");   
                    }  
            }
             else                     
                oFunc.SubSistemaMensajeError("No se puede repetir la asignacion del rol al mismo empleado");
}
    }//GEN-LAST:event_btnAsignarVistaActionPerformed

    private void TablaAsignacionRolMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAsignacionRolMousePressed
    if (evt.getClickCount() == 1) {  
        try {
            Integer cod = Integer.valueOf(TablaAsignacionRol.getValueAt(TablaAsignacionRol.getSelectedRow(), 1).toString());
            id_asignacion = Integer.valueOf(TablaAsignacionRol.getValueAt(TablaAsignacionRol.getSelectedRow(), 0).toString());
            
            // Construir la consulta SQL
            String Sql = "SELECT asig_rol.dni_empleado, " +
                         "desk_emple.nombres || ' ' || desk_emple.apellidos AS nombres, " +                     
                         "asig_rol.nombre_rol " +
                         "FROM desktop_asignacion_empleado_rol AS asig_rol " +
                         "INNER JOIN desktop_empleado AS desk_emple ON asig_rol.dni_empleado = desk_emple.dni " +
                         "WHERE asig_rol.dni_empleado = " + cod;

            System.out.println(Sql);

            // Ejecutar la consulta
            oConn.FnBoolQueryExecute(Sql);
            if (oConn.setResult.next()) {
                Asig_dni_empleado.setText(oConn.setResult.getString("dni_empleado"));
                asig_nombre_empleado.setText(oConn.setResult.getString("nombres"));           
                cboAsignarRol.setSelectedItem(oConn.setResult.getString("nombre_rol"));           

                btnActualizarVista.setEnabled(true);
                btnLimpiarVista.setEnabled(true);
                btnAsignarVista.setEnabled(false);      
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (NumberFormatException e) {
            oFunc.SubSistemaMensajeError("Formato de número incorrecto: " + e.getMessage());
        } catch (SQLException e) {
            oFunc.SubSistemaMensajeError("Error al ejecutar la consulta: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_TablaAsignacionRolMousePressed

    private void btnActualizarVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarVistaActionPerformed
        Actualizacion();
    }//GEN-LAST:event_btnActualizarVistaActionPerformed

    private void btnLimpiarVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarVistaActionPerformed
        btnLimpiarRoles();
    }//GEN-LAST:event_btnLimpiarVistaActionPerformed

    private void cboAsignarRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAsignarRolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboAsignarRolActionPerformed
// actualizar rol 
    private void Actualizacion(){
    String strSqlStmt;
        String query;
        strSqlStmt = "UPDATE desktop_asignacion_empleado_rol ";
        
        query = " SET "  ;
        query += " dni_empleado ="+ Asig_dni_empleado.getText().trim();
        query += ",nombre_rol='" +cboAsignarRol.getSelectedItem().toString().trim() + "'";
        query += ",user_actualizacion='"+clsGlobales.sUser+ "'";
        query += ",fecha_actualizacion='"+formato.format(dateHoy)+ "'";
        query += " WHERE id_asignacion ="+ id_asignacion;
      
        System.out.println("El comando es :" + strSqlStmt + query);
        
       
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt + query)) {
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado con Éxito");
            llenar_tabla_hc();
            btnLimpiarRoles();
            
        } else {
            oFunc.SubSistemaMensajeError("Error en registro");
        }            
    
    }
    
    
  // asignar rol con dni 
    public void asignarRol(){
    if(!Asig_dni_empleado.getText().isEmpty()){
        String Sql="SELECT dp.dni, dp.nombres ||' '|| dp.apellidos as nombres from desktop_empleado as dp  "                
                +"WHERE dni ='"+Asig_dni_empleado.getText().trim()+"'"; 
                System.out.println(Sql);                
        oConn.FnBoolQueryExecute(Sql);
          try {
                if (oConn.setResult.next()) {
                    Asig_dni_empleado.setText(oConn.setResult.getString("dni"));
                    asig_nombre_empleado.setText(oConn.setResult.getString("nombres"));                    
                               
                    btnActualizarVista.setEnabled(false);
                    btnLimpiarVista.setEnabled(true);
                    btnAsignarVista.setEnabled(true);
                    }else{
                    oFunc.SubSistemaMensajeError("No se encuentra registro del empleado");
                }
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage());
            }
        }
        else
            oFunc.SubSistemaMensajeError("Debes crear al empleado");
        if(cboAsignarRol.getSelectedIndex() > 0){
            }
                else oFunc.SubSistemaMensajeError("Selecciona el Rol "); 
    }
  private void listarRol(){
  String sQuery;  
        // Prepara el Query
        sQuery ="select nombre_rol from  desktop_rol";        
        System.out.println(sQuery);
        if (oConn.FnBoolQueryExecute(sQuery))
        {
            try 
            {
                 while (oConn.setResult.next())
                 {                     
                     
                     cboAsignarRol.addItem(oConn.setResult.getString("nombre_rol"));
                    }
            } 
            catch (SQLException ex) 
            {
                
                oFunc.SubSistemaMensajeInformacion(ex.toString());
                Logger.getLogger(AsignacionVistas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            oConn.setResult.close();
            oConn.sqlStmt.close(); 
        } catch (SQLException ex) {
            Logger.getLogger(AsignacionVistas.class.getName()).log(Level.SEVERE, null, ex);
        }    
  }  
    
 public void btnLimpiarRoles(){
    
    cboAsignarRol.setSelectedItem("N/A");
    cboVistas.setSelectedItem("N/A");
    btnActualizarVista.setEnabled(true);
    btnLimpiarVista.setEnabled(true);
    btnAsignarVista.setEnabled(true);

}
 private void llenar_tabla_hc() {
    try {
        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        
        String vSql = "SELECT asig_rol.id_asignacion,  " +
                      "desk_emple.nombres || ' ' || desk_emple.apellidos AS nombres, " +
                      "asig_rol.nombre_rol " +
                      "FROM desktop_asignacion_empleado_rol AS asig_rol " +
                      "INNER JOIN desktop_empleado AS desk_emple " +
                      "ON asig_rol.dni_empleado = desk_emple.dni;";

        System.out.println(vSql);
        
        if (oConn.FnBoolQueryExecute(vSql)) {
            try {
                java.sql.ResultSetMetaData rsmt = oConn.setResult.getMetaData();
                int CantidaColumnas = rsmt.getColumnCount();
                for (int i = 1; i <= CantidaColumnas; i++) {
                    model.addColumn(rsmt.getColumnLabel(i));
                }
                
                while (oConn.setResult.next()) {
                    Object[] Fila = new Object[CantidaColumnas];
                    for (int i = 0; i < CantidaColumnas; i++) {
                        Fila[i] = oConn.setResult.getObject(i + 1);
                    }
                    model.addRow(Fila);
                }
                
                TablaAsignacionRol.setModel(model);
                oConn.setResult.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(AsignacionVistas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        oConn.sqlStmt.close();
    } catch (SQLException ex) {
        Logger.getLogger(AsignacionVistas.class.getName()).log(Level.SEVERE, null, ex);
    }
}

  // prueba del select

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignacionVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignacionVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignacionVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignacionVistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsignacionVistas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaAsignacionRol;
    private javax.swing.JToggleButton btnActualizarVista;
    private javax.swing.JToggleButton btnAsignarVista;
    private javax.swing.JToggleButton btnLimpiarVista;
    private javax.swing.JComboBox<String> cboAsignarRol;
    private javax.swing.JComboBox<String> cboVistas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
