/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyMina.vista.interfaces;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import proyMina.modelo.clsConnection;
import proyMina.modelo.clsFunciones;
import proyMina.modelo.clsGlobales;
import proyMina.modelo.clsOperacionesUsuarios;

/**
 *
 * @author josue
 */
public class TicketHistoriaClinica extends javax.swing.JFrame {
    Date dateHoy = new Date();
    SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
         DefaultTableModel model;

    /**
     * Creates new form NewJFrame
     */
         
    public TicketHistoriaClinica() {
        initComponents();
        AutoCompleteDecorator.decorate(this.cboEspecialidad);
        cargarEspecialidades();
        setLocationRelativeTo(null);
                       popuptable();

    }
       public void popuptable(){
    JPopupMenu popupMenu=new JPopupMenu();
    JMenuItem menuItem1=new JMenuItem("ABRIR HISTORIA CLINICA");

    menuItem1.addActionListener(new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent ae) {
     int a =jTableEspecialidad.getSelectedRow();
     clsGlobales.tipoEspecialidad=(String)jTableEspecialidad.getValueAt(a,0);
     clsGlobales.historiaClinica=Integer.valueOf((String)jTableEspecialidad.getValueAt(a,1));
        if(clsGlobales.tipoEspecialidad.contains("CORRECTORES OCULARES"))
            {
            FichaHistoriaClinicaOftamologia fco= new FichaHistoriaClinicaOftamologia();
            fco.setVisible(true);
            }
            else{
            HistoriaClinicaGeriatria fco= new HistoriaClinicaGeriatria();
            fco.setVisible(true);            
            }
            
            
             //  JOptionPane.showMessageDialog(null, "Registro Eliminado");
        }
    
    });   
    

    popupMenu.add(menuItem1);   

    jTableEspecialidad.setComponentPopupMenu(popupMenu);
  
    }  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEspecialidad = new javax.swing.JTable();
        cboEspecialidad = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableEspecialidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableEspecialidad);

        cboEspecialidad.setEditable(true);
        cboEspecialidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N/A" }));
        cboEspecialidad.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboEspecialidadPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cboEspecialidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboEspecialidadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cboEspecialidadMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cboEspecialidadMousePressed(evt);
            }
        });
        cboEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEspecialidadActionPerformed(evt);
            }
        });
        cboEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboEspecialidadKeyPressed(evt);
            }
        });

        jButton1.setText("buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(cboEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jButton1)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboEspecialidadPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboEspecialidadPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadPopupMenuWillBecomeInvisible

    private void cboEspecialidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboEspecialidadMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadMouseClicked

    private void cboEspecialidadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboEspecialidadMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadMouseEntered

    private void cboEspecialidadMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboEspecialidadMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadMousePressed

    private void cboEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadActionPerformed

    private void cboEspecialidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboEspecialidadKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboEspecialidadKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       cargarTicketEspecialidadPorEspecializado(cboEspecialidad.getSelectedItem().toString().trim());
    }//GEN-LAST:event_jButton1ActionPerformed
       private void cargarEspecialidades(){
      String sQuery;        
        // Prepara el Query
        sQuery ="select nombre_especialidad from desktop_especialidades WHERE estado=true;";
        if (oConn.FnBoolQueryExecute(sQuery)){
            try{
                // Verifica resultados
                while (oConn.setResult.next()){                     
                     // Obtiene los datos de la Consulta
                     cboEspecialidad.addItem(oConn.setResult.getString ("nombre_especialidad").toUpperCase());
                }
            } 
            catch (SQLException ex){
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeInformacion(ex.toString());
            Logger.getLogger(FichaTriaje.class.getName()).log(Level.SEVERE, null, ex);
        }
        cboEspecialidad.setSelectedIndex(0);
        }
}
       


private void cargarTicketEspecialidadPorEspecializado(String especialidad){
    String [] titulos={"Especialidad","HC", "DNI","nombres"};
    String [] registros = new String[4];
    String sql="select dte.nombre_especialidad,dte.n_orden as hc,ddp.dni, CONCAT(ddp.apellidos,' ',ddp.nombres) as nombres\n" +
"	from desktop_ticket_espcialidad as dte \n" +
"	inner join desktop_datos_historia_clinica as ddhc on 	ddhc.n_orden=dte.n_orden\n" +
"	inner join 	desktop_datos_pacientes as ddp on ddhc.dni_paciente=ddp.dni\n" +
"	where dte.nombre_especialidad='"+especialidad+"'"+" and estado_registro=false;";
    
      model = new DefaultTableModel(null,titulos){        
              @Override
          public boolean isCellEditable(int rowIndex, int columnIndex) {
        return false;
    }};
       SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    if (oConn.FnBoolQueryExecute(sql))
        {
             try  {
                
                while (oConn.setResult.next())
                {        
                    registros[0]= oConn.setResult.getString("nombre_especialidad");
                    registros[1]= oConn.setResult.getString("hc").toString();
                    registros[2]= oConn.setResult.getString("dni");
                    registros[3]= oConn.setResult.getString("nombres");
                  
      
                     model.addRow(registros);
                }
                  // Coloca el Modelo de Nueva Cuenta
                  jTableEspecialidad.setModel(model);
                 // sbTablaTriaje();
                 // Cierra Resultados
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(FichaTriaje.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
     try {
         oConn.sqlStmt.close();
     } catch (SQLException ex) {
         Logger.getLogger(FichaTriaje.class.getName()).log(Level.SEVERE, null, ex);
     }
}


       
       
       
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketHistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketHistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketHistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketHistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketHistoriaClinica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboEspecialidad;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEspecialidad;
    // End of variables declaration//GEN-END:variables
}
